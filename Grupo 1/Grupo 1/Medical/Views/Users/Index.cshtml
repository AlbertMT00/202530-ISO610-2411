@model List<Medical.Models.User>
@{
    ViewData["Title"] = "Gestión de Pacientes";
}

<div class="header">
    <h1><i class="fas fa-users"></i> Gestión de Pacientes</h1>
    <a href="@Url.Action("Create", "Users")" class="btn btn-primary">
        <i class="fas fa-user-plus"></i> Nuevo Paciente
    </a>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" style="padding: 15px; background: #d4edda; color: #155724; border-radius: 5px; margin-bottom: 20px;">
        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
    </div>
}

<div class="card">
    <div class="card-header">
        <h2 class="card-title">Lista de Pacientes Registrados</h2>
        <div style="display: flex; gap: 10px; align-items: center;">
            <input type="text" id="searchInput" class="form-control" placeholder="Buscar paciente..." style="width: 300px;">
            <button class="btn btn-outline" onclick="searchPatients()">
                <i class="fas fa-search"></i> Buscar
            </button>
        </div>
    </div>
    <div class="table-container">
        <table class="table" id="patientsTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre Completo</th>
                    <th>Email</th>
                    <th>Teléfono</th>
                    <th>Edad</th>
                    <th>Tipo Sanguíneo</th>
                    <th>Fecha Registro</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    var edad = DateTime.Now.Year - user.BirthDate.Year;
                    <tr>
                        <td>@user.Id</td>
                        <td>
                            <strong>@user.FirstName @user.LastName</strong>
                            @if (user.Gender == "Femenino")
                            {
                                <i class="fas fa-venus" style="color: #e91e63; margin-left: 5px;"></i>
                            }
                            else if (user.Gender == "Masculino")
                            {
                                <i class="fas fa-mars" style="color: #2196f3; margin-left: 5px;"></i>
                            }
                        </td>
                        <td>@user.Email</td>
                        <td>@user.Phone</td>
                        <td>@edad años</td>
                        <td>
                            <span class="blood-type @user.BloodType.Replace("+","plus").Replace("-","minus")">
                                @user.BloodType
                            </span>
                        </td>
                        <td>@user.CreatedAt.ToString("dd/MM/yyyy")</td>
                        <td class="table-actions">
                            <a href="@Url.Action("Details", "Users", new { id = user.Id })" class="btn btn-sm btn-outline" title="Ver detalles">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="@Url.Action("Edit", "Users", new { id = user.Id })" class="btn btn-sm btn-outline" title="Editar">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a href="@Url.Action("Delete", "Users", new { id = user.Id })" class="btn btn-sm btn-danger" title="Eliminar">
                                <i class="fas fa-trash"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<style>
    .blood-type {
        padding: 4px 8px;
        border-radius: 4px;
        font-weight: 600;
        font-size: 0.8rem;
    }
    .blood-type.Aplus { background: #ffebee; color: #c62828; border: 1px solid #ffcdd2; }
    .blood-type.Aminus { background: #f3e5f5; color: #7b1fa2; border: 1px solid #e1bee7; }
    .blood-type.Bplus { background: #e8f5e8; color: #2e7d32; border: 1px solid #c8e6c9; }
    .blood-type.Bminus { background: #e3f2fd; color: #1565c0; border: 1px solid #bbdefb; }
    .blood-type.Oplus { background: #fff3e0; color: #ef6c00; border: 1px solid #ffe0b2; }
    .blood-type.Ominus { background: #fce4ec; color: #ad1457; border: 1px solid #f8bbd9; }
    .blood-type.ABplus { background: #e8eaf6; color: #303f9f; border: 1px solid #c5cae9; }
    .blood-type.ABminus { background: #e0f2f1; color: #00695c; border: 1px solid #b2dfdb; }
    
    .alert-success {
        display: flex;
        align-items: center;
        gap: 10px;
    }
</style>

<script>
    function searchPatients() {
        const input = document.getElementById('searchInput');
        const filter = input.value.toLowerCase();
        const table = document.getElementById('patientsTable');
        const tr = table.getElementsByTagName('tr');
        
        for (let i = 1; i < tr.length; i++) {
            const td = tr[i].getElementsByTagName('td')[1]; // Columna nombre
            if (td) {
                const txtValue = td.textContent || td.innerText;
                if (txtValue.toLowerCase().indexOf(filter) > -1) {
                    tr[i].style.display = '';
                } else {
                    tr[i].style.display = 'none';
                }
            }
        }
    }
    
    // Buscar al presionar Enter
    document.getElementById('searchInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            searchPatients();
        }
    });
</script>
